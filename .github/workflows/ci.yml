name: replicate-ci

on:
  pull_request:
    branches:
      - master

jobs:
  push:
    runs-on: ubuntu-latest
    env:
      BASE_IMAGE: 'daanelson/real-esrgan-fake-prod'
      PUSH_DEST: 'daanelson/real-esrgan-staging'

    steps:
    - name: checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: what changed
      id: what-changed
      run: |
        FILES_CHANGED=$(git diff --name-only --diff-filter=AMR ${{ github.event.before }} ${{ github.event.after }} | xargs)
        echo "FILES_CHANGED=$FILES_CHANGED" >> $GITHUB_ENV
        if echo "$FILES_CHANGED" | grep -q 'cog.yaml'; then
            echo "cog-push=true" >> $GITHUB_OUTPUT
          else
            echo "cog-push=false" >> $GITHUB_OUTPUT
          fi
        if ${{ contains(github.event.head_commit.message, '[cog build]') }}; then
            echo "cog-push=true" >> $GITHUB_OUTPUT
          fi

    # if cog.yaml changes - cog build and push. else - yolo build and push!
    - name: did-it-tho
      env:
        COG_PUSH: ${{ steps.what-changed.outputs.cog-push }}
      run: |
        echo "cog push?: $COG_PUSH"
        echo "changed files: $FILES_CHANGED"

    - name: setup-cog
      if: steps.what-changed.outputs.cog-push == 'true'
      uses: replicate/setup-cog@v1.0.3
      with:
        token: ${{ secrets.REPLICATE_API_TOKEN }}
        install-cuda: false

    - name: cog-build
      if: steps.what-changed.outputs.cog-push == 'true'
      run: |
        cog build

    - name: cog-push
      if: steps.what-changed.outputs.cog-push == 'true'
      run: |
        cog push r8.im/"$PUSH_DEST"

    - name: install-yolo
      run: |
        sudo curl -o /usr/local/bin/yolo -L "https://github.com/replicate/yolo/releases/latest/download/yolo_$(uname -s)_$(uname -m)"
        sudo chmod +x /usr/local/bin/yolo

    # yolo as hack for pushing environment variables
    - name: yolo-push-env
      if: steps.what-changed.outputs.cog-push == 'true'
      env:
       REPLICATE_API_TOKEN: ${{secrets.REPLICATE_API_TOKEN}}
       SENTRY_DSN: ${{secrets.SENTRY_DSN}}
      run: |
        touch meaningless_file.txt
        echo "adding environment variables to $PUSH_DEST"
        yolo push -e SENTRY_DSN="$SENTRY_DSN" --base $PUSH_DEST --dest $PUSH_DEST meaningless_file.txt

    - name: yolo-push
      if: steps.what-changed.outputs.cog-push == 'false'
      env:
       REPLICATE_API_TOKEN: ${{secrets.REPLICATE_API_TOKEN}}
       SENTRY_DSN: ${{secrets.SENTRY_DSN}}
      run: |
        echo "pushing changes from $BASE_IMAGE to $PUSH_DEST"
        echo "changed files: $FILES_CHANGED"
        yolo push -e SENTRY_DSN="$SENTRY_DSN" --base $BASE_IMAGE --dest $PUSH_DEST $FILES_CHANGED

    # - name: test model
    #   -- just run some http tests
    #   -- borrow template from SDXL
    #   -- pass in some flag s.t. we're testing in prod
